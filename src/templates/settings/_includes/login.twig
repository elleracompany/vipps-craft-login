{% import "_includes/forms" as forms %}

<div id="login" class="hidden">

    {% namespace "settings" %}

        <h2>Login with Vipps</h2>

        {% if userSettings.allowPublicRegistration is defined and userSettings.allowPublicRegistration is same as(true) %}

            {% if userSettings.defaultGroup is not defined or userSettings.defaultGroup is empty %}
                <p>New users will not be added to any permission group. Update the default group in Settings -> User Settings</p>
            {% else %}
                <p>New users will be added to the permission group <code>{{ userSettings.defaultGroup }}</code></p>
            {% endif %}
            <div class="field" style="display: inline-block; width: 45%;">
                <div class="heading">
                    <label class="">Redirect URIs</label>
                    <div class="instructions"><p>Use this to fill in "Redirect URI" during Login Setup in Vipps portal</p>
                    </div>
                </div>
                <div class="input ltr">
                    <code>{{ settings.getRedirectUri }}</code>
                </div>
            </div>

            {{ forms.textField({
                label: settings.getAttributeLabel('verify_template'),
                name: 'verify_template',
                value: settings.verify_template,
                instructions: 'Use a custom template for the password verification',
                errors: settings.getErrors('verify_template')
            }) }}

            <h2>Special Flows</h2>
            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_automatic_return'),
                name: 'login_automatic_return',
                on: settings.login_automatic_return,
                instructions: 'Please see the <a href="https://developer.vippsmobilepay.com/vipps-login-api/blob/master/vipps-login-api.md#automatic-return-from-vipps-app">official documentation</a> before enabling this feature.',
                errors: settings.getErrors('login_automatic_return')
            }) }}

            <h2>Scopes</h2>

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_address'),
                name: 'login_address',
                on: settings.login_address,
                instructions: 'Request the address field',
                errors: settings.getErrors('login_address')
            }) }}

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_birthDate'),
                name: 'login_birthDate',
                on: settings.login_birthDate,
                instructions: 'Request the Birth Date field',
                errors: settings.getErrors('login_birthDate')
            }) }}

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_email'),
                name: 'login_email',
                on: settings.login_email,
                instructions: 'Request the Email field',
                errors: settings.getErrors('login_email')
            }) }}

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_name'),
                name: 'login_name',
                on: settings.login_name,
                instructions: 'Request the Name field',
                errors: settings.getErrors('login_name')
            }) }}

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_phoneNumber'),
                name: 'login_phoneNumber',
                on: settings.login_phoneNumber,
                instructions: 'Request the Phone Number field',
                errors: settings.getErrors('login_phoneNumber')
            }) }}

            {{ forms.lightswitchField({
                label: settings.getAttributeLabel('login_nin'),
                name: 'login_nin',
                on: settings.login_nin,
                instructions: 'Request the Norwegian National Identification Number field',
                errors: settings.getErrors('login_nin')
            }) }}
        {% else %}

            <p>You need to allow public registrations to use this feature</p>

        {% endif %}

    {% endnamespace %}

</div>